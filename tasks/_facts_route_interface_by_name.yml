---

# Gather Interface by its Name tag:
#
# * aws_vpc_route_tables loop variable: 'rt'
# * aws_vpc_route_tables.routes loop variable: 'interface'
#
# Returns:
# * aws_vpc_rt_interface_by_name

- name: gather interface by name
  ec2_eni_facts:
    aws_access_key: "{{ lookup('ENV', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('ENV', 'AWS_SECRET_KEY') | default(omit)  }}"
    security_token: "{{ lookup('ENV', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ aws_vpc_route_table_profile | default(omit) }}"
    region: "{{ rt.region | default(aws_vpc_route_table_default_region) }}"
    filters:
      "tag:Name": "{{ interface.name }}"
  register: _aws_vpc_rt_routes_interface
  check_mode: False

- name: fail if not exactly one interface was found by name
  assert:
    that:
      - _aws_vpc_rt_routes_interface.network_interfaces is defined
      - _aws_vpc_rt_routes_interface.network_interfaces | length == 1
    msg: Not exactly one interface has been found

- name: set interface array
  set_fact:
    aws_vpc_rt_interface_by_name: "{{ aws_vpc_rt_interface_by_name | default([]) + [{'dest': interface.dest, 'network_interface_id': _aws_vpc_rt_routes_interface.network_interfaces[0].network_interface_id }] }}"
